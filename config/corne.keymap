/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
            // | SHFT |  X  |  C  |  D  |  V  |  Z  |   |  K  |  H   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp F           &kp P  &kp B        &kp J      &kp L  &kp U      &kp Y    &kp SEMI  &kp BSPC
&kp TAB           &kp A  &kp R  &kp S           &kp T  &kp G        &kp M      &kp N  &kp E      &kp I    &kp O     &kp SQT
&kp LEFT_CONTROL  &kp X  &kp C  &kp D           &kp V  &kp Z        &kp K      &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_BRACKET
                                &kp LEFT_SHIFT  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp HOME        &kp UP    &kp END    &trans        &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &kp LEFT_WIN  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &trans          &trans    &trans     &trans        &trans
                        &trans  &trans  &trans    &trans         &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCL  &kp AT  &kp HASH      &kp PRCNT     &kp CARET     &kp AMPERSAND    &kp STAR      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS     &kp EQUAL     &kp BSPC
&trans    &kp N1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5     &kp NUMBER_6  &kp NUMBER_7          &kp NUMBER_8           &kp NUMBER_9  &kp NUMBER_0  &kp BACKSLASH
&trans    &trans  &trans        &trans        &trans        &trans           &trans        &kp TILDE             &trans                 &trans        &trans        &kp RIGHT_BRACKET
                                &trans        &trans        &trans           &trans        &trans                &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_CLR_ALL  &trans      &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_PRV      &bt BT_NXT  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans      &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        cond_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
